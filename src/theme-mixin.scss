// // Setting up an Angular Material Theme Mixin.
// @use '~@angular/material' as mat;

// // Import Themeing:
// @import '~@angular/material/theming';

// // Include Material Core:
// @include mat.core();


// // Mixin for Mili Main:
// @mixin mili-main($mili-main-theme)
// {
//   // Obtain the palettes(?).
//   $p: map-get($mili-main-theme, primary);
//   $a: map-get($mili-main-theme, accent);

//   // Obtain the colours.
//   $primary: mat.get-color-from-palette($p, 'white');
//   $accent: mat.get-color-from-palette($a, 'colour');

//   // Defining Style:
//   .mili-main {
//     // Colour:
//     .colour {
//       .primary {
//         color: $primary;
//       }
//       .accent {
//         color: $accent;
//       }
//     }
//     // Background:
//     .background {
//       .primary {
//         background-color: $primary;
//       }
//       .accent {
//         background-color: $accent;
//       }
//     }
//   }
// }


/*
  A word of note.

  This file for Theme Mixin will likely become vestigial and remain that way for a multitude of reason.

  The main reason being that I actually plan on having many different kind of colour themes depending on the content.
  Basically a large amount of customization & styling.
  Adding onto the point above, a main boon for having a theme system like this is to have a built-in system that supports
  the rapid swapping of themes without needing to do any "hard" coding (it just needs theme info).
  This is not needed here because the colour scheme will be specifically curated, as the colour is very important for
  the content it's complimenting and can't really be swapped willy nilly.

  Second is that I am too bummed to go through the effort of incorporating them into the theme-mixin stuff.


  New world of note.

  I have decided to double down on my decision to not use themes for the main reason above.
  To reiterate, it's that a theme changing functionality is useless when each element of the webpage as a specific colour choice
  that can't really be captured with an all-encompassing theme.
  As such, I will not be using themes anymore.
*/
